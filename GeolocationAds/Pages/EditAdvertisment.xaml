<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="GeolocationAds.Pages.EditAdvertisment"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Maui;assembly=FFImageLoading.Maui"
    xmlns:local="clr-namespace:GeolocationAds.CustomContentView"
    xmlns:templateSelector="clr-namespace:GeolocationAds.DataTemplates"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    Title="Update Content">

    <ContentPage.ToolbarItems>

        <ToolbarItem Command="{Binding UploadContentCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="MaterialIconsOutlined-Regular" Glyph="&#xe8a7;" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>

        <ToolbarItem Command="{Binding SubmitUpdateCommand}" CommandParameter="{Binding Model}">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="MaterialIconsOutlined-Regular" Glyph="&#xe876;" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>

    <ContentPage.Resources>

        <DataTemplate x:Key="ImageDataTemplate2">

            <Grid>

                <ffimageloading:CachedImage
                    Aspect="Fill"
                    FadeAnimationEnabled="True"
                    Source="{Binding Image}" />

                <!--  Button Container Grid  -->
                <Grid>
                    <!--  Button is placed in the same cell as the image  -->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!--  Button  -->
                    <Button
                        Grid.Row="0"
                        Grid.Column="0"
                        Command="{Binding RemoveCurrentItemCommand}"
                        CommandParameter="{Binding CurrentAdvertisement}"
                        IsVisible="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}"
                        Style="{StaticResource XButton}"
                        VerticalOptions="Start">

                        <Button.Shadow>
                            <Shadow
                                Brush="{StaticResource AppBlack}"
                                Opacity="0.5"
                                Radius="40"
                                Offset="5,5" />
                        </Button.Shadow>

                        <Button.ImageSource>
                            <FontImageSource FontFamily="MaterialIconsOutlined-Regular" Glyph="&#xe5cd;" />
                        </Button.ImageSource>
                    </Button>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="VideoDataTemplate2">

            <Grid>

                <toolkit:MediaElement
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    Aspect="Fill"
                    ShouldShowPlaybackControls="True"
                    Source="{Binding MediaSource}" />

                <!--  Button Container Grid  -->
                <Grid>
                    <!--  Button is placed in the same cell as the image  -->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!--  Button  -->
                    <Button
                        Grid.Row="0"
                        Command="{Binding RemoveCurrentItemCommand}"
                        CommandParameter="{Binding CurrentAdvertisement}"
                        IsVisible="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}"
                        Style="{StaticResource XButton}"
                        VerticalOptions="Start">

                        <Button.Shadow>
                            <Shadow
                                Brush="{StaticResource AppBlack}"
                                Opacity="0.5"
                                Radius="40"
                                Offset="5,5" />
                        </Button.Shadow>

                        <Button.ImageSource>
                            <FontImageSource FontFamily="MaterialIconsOutlined-Regular" Glyph="&#xe5cd;" />
                        </Button.ImageSource>
                    </Button>
                </Grid>
            </Grid>
        </DataTemplate>

        <templateSelector:ContentTypeTemplateSelector
            x:Key="typeSelector"
            ImageDataTemplate="{StaticResource ImageDataTemplate2}"
            VideoDataTemplate="{StaticResource VideoDataTemplate2}" />
    </ContentPage.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="100*" />
        </Grid.RowDefinitions>

        <CollectionView Grid.Row="0" ItemsSource="{Binding ValidationResults}">
            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <StackLayout>
                        <Label Style="{StaticResource ErrorLabelStyle}" Text="{Binding ErrorMessage}" />
                    </StackLayout>
                </DataTemplate>
            </CollectionView.ItemTemplate>

            <CollectionView.ItemsLayout>
                <GridItemsLayout Orientation="Vertical" Span="2" />
            </CollectionView.ItemsLayout>
        </CollectionView>

        <local:CustomEntryContentView
            Grid.Row="1"
            IsEnabled="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}"
            Placeholder="Title"
            Text="{Binding Model.Title}" />

        <local:CustomEntryContentView
            Grid.Row="2"
            IsEnabled="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}"
            Placeholder="Description"
            Text="{Binding Model.Description}" />

        <local:CustomPickerContentView
            Grid.Row="3"
            DisplayItem="{Binding SelectedAdType, Mode=TwoWay}"
            HorizontalOptions="FillAndExpand"
            IsEnabled="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}"
            ItemDisplayBindingPath="Value"
            ItemsSource="{Binding AdTypesSettings}"
            SelectValue="{Binding SelectedAdType}"
            SelectedItem="{Binding SelectedAdType}" />

        <CarouselView
            x:Name="contentCollection"
            Grid.Row="4"
            IndicatorView="indicatorView"
            IsScrollAnimated="True"
            ItemTemplate="{StaticResource typeSelector}"
            ItemsSource="{Binding ContentTypesTemplate}"
            ItemsUpdatingScrollMode="KeepLastItemInView"
            Loop="False">

            <CarouselView.ItemsLayout>
                <LinearItemsLayout
                    Orientation="Horizontal"
                    SnapPointsAlignment="Start"
                    SnapPointsType="MandatorySingle" />
            </CarouselView.ItemsLayout>

            <CarouselView.EmptyView>
                <StackLayout>
                    <Label Style="{StaticResource emptyCollectionLabel}" Text="Content goes here." />
                </StackLayout>
            </CarouselView.EmptyView>
        </CarouselView>

        <IndicatorView
            x:Name="indicatorView"
            Grid.Row="4"
            Margin="5"
            Padding="5"
            HorizontalOptions="Center"
            IndicatorColor="{StaticResource DarkViolet}"
            IndicatorSize="18"
            SelectedIndicatorColor="{StaticResource BrightOrangeRed}"
            VerticalOptions="End" />

        <ActivityIndicator
            Grid.Row="4"
            IsRunning="{Binding IsLoading}"
            Style="{StaticResource globalLoading}" />
    </Grid>
</ContentPage>