<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="GeolocationAds.Pages.CreateAdvertisment"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:GeolocationAds.App_Converter"
    xmlns:drawable="clr-namespace:GeolocationAds.CustomCotrols"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Maui;assembly=FFImageLoading.Maui"
    xmlns:local="clr-namespace:GeolocationAds.CustomContentView"
    xmlns:skia="clr-namespace:SkiaSharp.Extended.UI.Controls;assembly=SkiaSharp.Extended.UI"
    xmlns:templateSelector="clr-namespace:GeolocationAds.DataTemplates"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:viewTemplate="clr-namespace:GeolocationAds.ViewTemplates"
    xmlns:views="clr-namespace:GeolocationAds.ViewTemplates"
    Title="Create"
    BackgroundColor="GhostWhite"
    Routing.Route="create">

    <ContentPage.ToolbarItems>

        <ToolbarItem
            Command="{Binding SubmitCommand}"
            CommandParameter="{Binding Model}"
            IsEnabled="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="MaterialIconsOutlined-Regular" Glyph="&#xe876;" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>

        <ToolbarItem Command="{Binding UploadContentCommand}" IsEnabled="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="MaterialIconsOutlined-Regular" Glyph="&#xe43e;" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>

        <ToolbarItem
            Command="{Binding ClearCommand}"
            CommandParameter="{Binding Model}"
            IsEnabled="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="MaterialIconsOutlined-Regular" Glyph="&#xe5c9;" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>

    <ContentPage.Resources>

        <converters:AnimationConverter x:Key="AnimationConverter" />

        <converters:LenghtCountConverter x:Key="LenghtCountConverter" />

        <DataTemplate x:Key="WebViewDataTemplateCreate">



            <!--<WebView
                x:Name="web"
                Grid.Row="0"
                Loaded="OnWebViewLoaded"
                Navigating="WebView_Navigating"
                Source="{Binding UrlSource, Mode=TwoWay}" />-->

            <Grid>
                <WebView
                    HorizontalOptions="Fill"
                    Loaded="OnWebViewLoaded"
                    Navigating="WebView_Navigating"
                    Source="{Binding UrlSource, Mode=TwoWay}"
                    VerticalOptions="Fill" />
            </Grid>

        </DataTemplate>

        <DataTemplate x:Key="ImageDataTemplateCreate">



            <!--<ffimageloading:CachedImage
                Grid.Row="0"
                Aspect="AspectFit"
                FadeAnimationEnabled="True"
                Source="{Binding Image}" />-->

            <Grid>
                <ffimageloading:CachedImage
                    Aspect="AspectFit"
                    FadeAnimationEnabled="True"
                    HorizontalOptions="Fill"
                    Source="{Binding Image}"
                    VerticalOptions="Fill" />
            </Grid>

        </DataTemplate>

        <DataTemplate x:Key="VideoDataTemplateCreate">



            <!--<toolkit:MediaElement
                Grid.Row="0"
                Aspect="Fill"
                ShouldShowPlaybackControls="True"
                Source="{Binding MediaSource, Mode=TwoWay}" />-->

            <Grid>
                <toolkit:MediaElement
                    Aspect="AspectFit"
                    HeightRequest="400"
                    HorizontalOptions="Fill"
                    ShouldShowPlaybackControls="True"
                    Source="{Binding MediaSource, Mode=TwoWay}"
                    VerticalOptions="Fill" />
            </Grid>

        </DataTemplate>

        <templateSelector:ContentTypeTemplateSelector
            x:Key="typeSelector"
            ImageDataTemplate="{StaticResource ImageDataTemplateCreate}"
            UrlDataTemplate="{StaticResource WebViewDataTemplateCreate}"
            VideoDataTemplate="{StaticResource VideoDataTemplateCreate}" />
    </ContentPage.Resources>


    <ScrollView>

        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" HeightRequest="120">
                <GraphicsView HorizontalOptions="Fill" VerticalOptions="Fill">
                    <GraphicsView.Drawable>
                        <drawable:SemiCircle />
                    </GraphicsView.Drawable>
                </GraphicsView>
                <Label
                    FontAttributes="Bold"
                    FontSize="15"
                    HorizontalOptions="Center"
                    HorizontalTextAlignment="Center"
                    LineBreakMode="WordWrap"
                    Text="Don’t wait for something to happen… create it here."
                    TextColor="White"
                    VerticalOptions="Center"
                    VerticalTextAlignment="Center" />
            </Grid>

            <CollectionView Grid.Row="1" ItemsSource="{Binding ValidationResults}">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <StackLayout>
                            <Label
                                HorizontalOptions="Center"
                                Style="{StaticResource ErrorLabelStyle}"
                                Text="{Binding ErrorMessage}" />
                        </StackLayout>
                    </DataTemplate>
                </CollectionView.ItemTemplate>

                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical" Span="2" />
                </CollectionView.ItemsLayout>
            </CollectionView>

            <local:CustomEntryContentView
                Grid.Row="2"
                IconSource="&#xf05b;"
                IsEnabled="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}"
                Placeholder="Title"
                Text="{Binding Model.Title, Mode=TwoWay}" />

            <local:CustomEditorContentView
                Grid.Row="3"
                IsEnabled="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}"
                Placeholder="Description"
                Text="{Binding Model.Description, Mode=TwoWay}" />

            <local:CustomPickerContentView
                Grid.Row="4"
                DisplayItem="{Binding SelectedAdType, Mode=TwoWay}"
                IconSource="arrow.png"
                IsEnabled="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}"
                ItemDisplayBindingPath="Value"
                ItemsSource="{Binding AdTypesSettings}"
                SelectValue="{Binding SelectedAdType}"
                SelectedItem="{Binding SelectedAdType, Mode=TwoWay}" />

            <Grid Grid.Row="5">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <local:CustomEntryContentView
                    x:Name="urlValue"
                    Grid.Column="0"
                    IconSize="50"
                    IconSource="&#xe902;"
                    IsEnabled="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}"
                    Placeholder="URL"
                    Text="{Binding Url, Mode=TwoWay}"
                    WidthRequest="300" />

                <Button
                    Grid.Column="1"
                    Command="{Binding SetURLCommand}"
                    CommandParameter="{Binding Source={x:Reference urlValue}, Path=Text}"
                    HeightRequest="45"
                    IsEnabled="{Binding IsLoading, Converter={StaticResource IsEnableConverter}}"
                    Style="{StaticResource globalButtonUrL}"
                    WidthRequest="45">

                    <Button.ImageSource>
                        <FontImageSource FontFamily="MaterialIconsOutlined-Regular" Glyph="&#xe178;" />
                    </Button.ImageSource>
                </Button>
            </Grid>

            <viewTemplate:EditAndCreateCarousel
                x:Name="contentCollection"
                Grid.Row="6"
                ItemTemplate="{StaticResource typeSelector}"
                ItemsSource="{Binding ContentTypesTemplate}" />



            <views:LoadingOverlay
                Grid.Row="0"
                Grid.RowSpan="7"
                HorizontalOptions="Fill"
                IsVisible="{Binding IsLoading}"
                VerticalOptions="Fill" />
        </Grid>
    </ScrollView>

</ContentPage>